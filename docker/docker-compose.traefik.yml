# This file can be used as a starting point for deploying a built pruvious container
# in a docker swarm cluster with traefik as the loadbalancer.
# We (onesrv.net) use this in production, but cannot guarantee that this will work for your
# cluster right out of the box as it depends on how you installed and setup traefik
version: '3'
services:
  nuxt:
    # Make sure to replace this with the pruvious image you have built before!
    # How to build a docker image: https://docs.docker.com/get-started/workshop/02_our_app/
    image: <REPLACE:your-docker-image>:latest
    restart: unless-stopped
    deploy:
      replicas: 1
      labels:
        - traefik.http.routers.pruvious-http.rule=Host(`<yourdomain.com>`)
        - traefik.http.routers.pruvious-http.entrypoints=web

        - traefik.http.routers.pruvious.rule=Host(`<yourdomain.com>`)
        - traefik.http.routers.pruvious.entrypoints=websecure
        - traefik.http.routers.pruvious.tls
        # Our letsencrypt cert resolver is called le, change name if needed
        - traefik.http.routers.pruvious.tls.certResolver=le
        -
        - traefik.http.services.pruvious-service.loadbalancer.server.port=3000
        - traefik.constraint-label=traefik-public
        - traefik.enable=true
    environment:
      - NUXT_PRUVIOUS_DATABASE=postgresql://pruvious:pruvious@db:5432/pruvious
    volumes:
      - uploads:/app/uploads
    networks:
      - traefik-public
      - internal
  db:
    image: postgres:15-alpine
    restart: always
    #    command: ["postgres", "-c", "config_file=/var/lib/postgresql/data/postgresql.conf"]
    environment:
      - POSTGRES_USER=pruvious
      - POSTGRES_PASSWORD=pruvious
      - POSTGRES_DB=pruvious
      - PGDATA=/var/lib/postgresql/data
    volumes:
      - db:/var/lib/postgresql/data/
    networks:
      - internal

networks:
  traefik-public:
    external: true
  internal:


# MAKE SURE TO CHANGE THESE VOLUMES TO YOUR PREFERED VOLUME DRIVER! (Please see docker docs or use the standard docker-compose.yml
# if you do not know what to do here!
volumes:
  db:
  uploads:
